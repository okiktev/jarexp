<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>

<project name="Jar Explorer">
	<description>
		Builds Jar Explorer application.
	</description>

	<property file="${basedir}/local.properties" />
	<property file="${basedir}/build.properties" />

	<target name="clean">
		<echo message="Cleaning build directory" />

		<delete dir="${build.dir}" />
		<mkdir dir="${build.dir}" />
		<antcall target="generate-build-num" />
	</target>

	<target name="compile" depends="clean">
		<echo message="Compiling sources into ${classes.dir}" />

		<mkdir dir="${classes.dir}" />
		<mkdir dir="${build.dir}/src" />

		<loadfile srcfile="${build.num.file}" property="build">
			<filterchain>
				<tokenfilter>
					<filetokenizer />
					<replacestring from=" " to="" />
				</tokenfilter>
			</filterchain>
		</loadfile>
		<property name="full.version" value="${version}.${build}" />

		<echo message="The product version is: ${full.version}" />

		<checksum file="${basedir}/lib/${dependency1jarName}" property="MD5.lib.rsta"/>
		<checksum file="${basedir}/lib/${dependency2jarName}" property="MD5.lib.jdecompiler071"/>
		<checksum file="${basedir}/lib/${dependency3jarName}" property="MD5.lib.jdecompiler113"/>
		<checksum file="${basedir}/lib/${dependency4jarName}" property="MD5.lib.procyon"/>
		<checksum file="${basedir}/lib/${dependency5jarName}" property="MD5.lib.fernflower"/>
		<copy todir="${build.dir}/src">
			<fileset dir="${src.dir}" >
				<exclude name="**/FieldHelper.java"/>
				<exclude name="**/TableHeaderCustomizer.java"/>
			</fileset>
			<filterset>
				<filter token="VERSION" value="${full.version}" />
				<filter token="COPYRIGHT" value="${copyright}" />
			</filterset>
		</copy>

		<javac srcdir="${build.dir}/src" debug="${debug}" debuglevel="${debug.level}"
			destdir="${classes.dir}" includeantruntime="false" source="1.6" target="1.6" >
			<classpath>
				<filelist>
					<file name="${dependency1}"/>
					<file name="${dependency2}"/>
					<file name="${dependency3}"/>
					<file name="${dependency4}"/>
					<file name="${dependency5}"/>
					<file name="${build.res.dir}"/>
				</filelist>
			</classpath>
		</javac>
	</target>

	<target name="assembly" depends="compile">
		<echo message="Assembling files into ${jar.dir}" />

		<mkdir dir="${jar.dir}" />
		<copy todir="${jar.dir}">
			<fileset dir="${classes.dir}" />
			<fileset dir="${build.res.dir}" />
		</copy>
		
		<copy todir="${jar.dir}">
			<fileset dir="${resources.dir}" >
				<exclude name="**/LICENSE" />
				<exclude name="**/logging*properties" />
				<exclude name="**/dependencies*" />
				<exclude name="licenses.zip" />
			</fileset>
		</copy>
		<copy todir="${jar.dir}">
			<fileset dir="${resources.dir}" includes="**/LICENSE" />
			<filterset>
				<filter token="COPYRIGHT" value="${copyright}" />
			</filterset>
		</copy>
		<copy file="${resources.dir}/logging-prod.properties" tofile="${jar.dir}/logging.properties" />
		<copy file="${resources.dir}/dependencies-prod" tofile="${jar.dir}/dependencies" >
			<filterset>
				<filter token="RSTA_FILE_NAME" value="${dependency1jarName}" />
				<filter token="RSTA_FILE_MD5" value="${MD5.lib.rsta}" />
				<filter token="JDECOMPILER071_FILE_NAME" value="${dependency2jarName}" />
				<filter token="JDECOMPILER071_FILE_MD5" value="${MD5.lib.jdecompiler071}" />
				<filter token="JDECOMPILER113_FILE_NAME" value="${dependency3jarName}" />
				<filter token="JDECOMPILER113_FILE_MD5" value="${MD5.lib.jdecompiler113}" />
				<filter token="PROCYON_FILE_NAME" value="${dependency4jarName}" />
				<filter token="PROCYON_FILE_MD5" value="${MD5.lib.procyon}" />
				<filter token="FERNFLOWER_FILE_NAME" value="${dependency5jarName}" />
				<filter token="FERNFLOWER_FILE_MD5" value="${MD5.lib.fernflower}" />
			</filterset>
		</copy>
		<zip destfile="${jar.dir}/licenses.zip">
			<zipfileset dir="${jar.dir}">
				<include name="*.license" />
				<include name="LICENSE" />
			</zipfileset>
		</zip>
		<delete dir="${jar.dir}">
			<include name="*.license" />
			<include name="LICENSE" />
		</delete>
	</target>

	<target name="generate-build-num">
		<echo message="Generating new build number" />

		<exec executable="cmd" dir="${build.num.dir}" failonerror="true" osfamily="windows">
			<arg value="/c" />
			<arg value="gen_build_num.bat" />
		</exec>
		
		<exec executable="sh" dir="${build.num.dir}" failonerror="true" osfamily="unix">
			<arg value="gen_build_num.sh" />
		</exec>
	</target>

	<target name="generate-build-site-num">
		<echo message="Generating new build site number" />

		<exec executable="cmd" dir="${build.num.dir}" failonerror="true" osfamily="windows">
			<arg value="/c" />
			<arg value="gen_build_site_num.bat" />
		</exec>

		<exec executable="sh" dir="${build.num.dir}" failonerror="true" osfamily="unix">
			<arg value="gen_build_site_num.sh" />
		</exec>
	</target>

	<target name="jar" depends="assembly">
		<echo message="Making jar file into ${artifacts.dir}" />

		<mkdir dir="${artifacts.dir}" />

		<loadfile srcfile="${build.num.file}" property="build">
			<filterchain>
				<tokenfilter>
					<filetokenizer />
					<replacestring from=" " to="" />
				</tokenfilter>
			</filterchain>
		</loadfile>

		<jar destfile="${artifacts.dir}/jar-explorer-${full.version}.jar">
			<manifest>
				<attribute name="Built-By" value="delfin" />
				<attribute name="Application-Version" value="${full.version}" />
				<attribute name="Main-Class" value="com.delfin.jarexp.Main" />
			</manifest>

			<fileset dir="${jar.dir}" >
				<exclude name="com/beust/**" />
				<exclude name="com/strobel/**" />
				<exclude name="org/jetbrains/**" />
			</fileset>
		</jar>
	</target>

	<target name="fullJar" depends="jar">
		<echo message="Making full jar file into ${artifacts.dir}" />

		<loadfile srcfile="${build.num.file}" property="build">
			<filterchain>
				<tokenfilter>
					<filetokenizer />
					<replacestring from=" " to="" />
				</tokenfilter>
			</filterchain>
		</loadfile>

		<unjar src="${dependency1}" dest="${jar.dir}" />
		<delete dir="${jar.dir}/META-INF" />
		<unjar src="${dependency2}" dest="${jar.dir}" />
		<delete dir="${jar.dir}/META-INF" />
		<unjar src="${dependency4}" dest="${jar.dir}" />
		<delete dir="${jar.dir}/META-INF" />
		<unjar src="${dependency5}" dest="${jar.dir}" />
		<delete dir="${jar.dir}/META-INF" />

		<delete file="${jar.dir}/dependencies" />

		<jar destfile="${artifacts.dir}/jar-explorer-${full.version}-full.jar">
			<manifest>
				<attribute name="Built-By" value="delfin" />
				<attribute name="Application-Version" value="${full.version}" />
				<attribute name="Main-Class" value="com.delfin.jarexp.Main" />
			</manifest>

			<fileset dir="${jar.dir}" />
		</jar>
	</target>

	<target name="pack" depends="fullJar">
		<copy todir="${artifacts.dir}">
			<fileset dir="${build.exe.dir}" >
				<include name="jarexp.xml" />
				<include name="Jar Explorer.sh" />
			</fileset>
			<filterset>
				<filter token="ARTIFACTS_DIR" value="${artifacts.dir}" />
				<filter token="JARNAME" value="jar-explorer-${full.version}.jar" />
				<filter token="BUILD_EXE_DIR" value="${build.exe.dir}" />
			</filterset>
		</copy>
		<property name="jar.lib.dir" value="${artifacts.dir}/lib"/>
		<mkdir dir="${jar.lib.dir}" />
		<move file="${artifacts.dir}/jar-explorer-${full.version}.jar" todir="${jar.lib.dir}" />
		<echo message="Making exe file in ${artifacts.dir}" />
		<exec executable="${launch4j.dir}/windows/launch4j.exe" dir="${launch4j.dir}/windows" failonerror="true" osfamily="windows">
			<arg value="${artifacts.dir}/jarexp.xml" />
		</exec>
		<exec executable="${launch4j.dir}/linux/launch4j" dir="${launch4j.dir}/linux" failonerror="true" osfamily="unix">
			<arg value="${artifacts.dir}/jarexp.xml" />
		</exec>

		<waitfor maxwait="30" maxwaitunit="second">
		    <available file="${artifacts.dir}/Jar Explorer.exe"/>
		</waitfor>
		<delete file="${artifacts.dir}/jarexp.xml" />
		<property name="win.archive.name" value="JarExplorer.${full.version}.zip"/>
		<property name="lin.archive.name" value="JarExplorer.${full.version}.tar.gz"/>
		<zip destfile="${artifacts.dir}/${win.archive.name}" >
			<fileset dir="${artifacts.dir}" >
				<include name="Jar Explorer.exe" />
			</fileset>
		</zip>
		<tar destfile="${artifacts.dir}/JarExplorer.${full.version}.tar" >
			<fileset dir="${artifacts.dir}" >
				<include name="Jar Explorer.sh" />
				<include name="lib/**"/>
			</fileset>
		</tar>
		<gzip destfile="${artifacts.dir}/${lin.archive.name}" src="${artifacts.dir}/JarExplorer.${full.version}.tar" />
		<delete file="${artifacts.dir}/JarExplorer.${full.version}.tar" />
		
		<!--<exec executable="${7zip.exe.name}" failonerror="true" >
			<arg value="a" />
			<arg value="-tzip" />
			<arg value="-p***" />
			<arg value="${artifacts.dir}/JarsExplorer.${full.version}.zip" />
			<arg value="${artifacts.dir}/lib" />
			<arg value="${artifacts.dir}/Jar Explorer.exe" />
			<arg value="${artifacts.dir}/Jar Explorer.sh" />
		</exec> -->
	</target>

	<target name="fullPack" depends="pack">
		<property name="full.pack.dir" value="${artifacts.dir}/fullpack" />
		<mkdir dir="${full.pack.dir}" />
		<copy todir="${full.pack.dir}">
			<fileset dir="${build.exe.dir}" >
				<include name="jarexp.xml" />
				<include name="Jar Explorer.sh" />
			</fileset>
			<filterset>
				<filter token="ARTIFACTS_DIR" value="${full.pack.dir}" />
				<filter token="JARNAME" value="jar-explorer-${full.version}.jar" />
				<filter token="BUILD_EXE_DIR" value="${build.exe.dir}" />
			</filterset>
		</copy>
		<move file="${artifacts.dir}/jar-explorer-${full.version}-full.jar" tofile="${full.pack.dir}/lib/jar-explorer-${full.version}.jar" />
		<echo message="Making full exe file in ${full.pack.dir}" />
		<exec executable="${launch4j.dir}/windows/launch4j.exe" dir="${launch4j.dir}/windows" failonerror="true" osfamily="windows">
			<arg value="${full.pack.dir}/jarexp.xml" />
		</exec>
		<exec executable="${launch4j.dir}/linux/launch4j" dir="${launch4j.dir}/linux" failonerror="true" osfamily="unix">
			<arg value="${full.pack.dir}/jarexp.xml" />
		</exec>

		<waitfor maxwait="30" maxwaitunit="second">
		    <available file="${full.pack.dir}/Jar Explorer.exe"/>
		</waitfor>
		<delete file="${full.pack.dir}/jarexp.xml" />
		<property name="win.full.archive.name" value="JarExplorer.${full.version}.full.zip"/>
		<property name="lin.full.archive.name" value="JarExplorer.${full.version}.full.tar.gz"/>
		<zip destfile="${full.pack.dir}/${win.full.archive.name}" >
			<fileset dir="${full.pack.dir}" >
				<include name="Jar Explorer.exe" />
			</fileset>
		</zip>
		<tar destfile="${full.pack.dir}/JarExplorer.${full.version}.tar" >
			<fileset dir="${full.pack.dir}" >
				<include name="Jar Explorer.sh" />
				<include name="lib/**"/>
			</fileset>
		</tar>
		<gzip destfile="${full.pack.dir}/${lin.full.archive.name}" src="${full.pack.dir}/JarExplorer.${full.version}.tar" />
		<delete file="${full.pack.dir}/JarExplorer.${full.version}.tar" />

		<move file="${full.pack.dir}/${win.full.archive.name}" todir="${artifacts.dir}" />
		<move file="${full.pack.dir}/${lin.full.archive.name}" todir="${artifacts.dir}" />
	</target>

	<target name="site">
		<property name="site.dir" value="${artifacts.dir}/site" />
		<delete dir="${site.dir}" file="${site.dir}" />
		<mkdir dir="${site.dir}" />
		<property name="jarexp.dir" value="${site.dir}/jarexp" />

		<loadfile srcfile="${build.num.file}" property="build">
			<filterchain>
				<tokenfilter>
					<filetokenizer />
					<replacestring from=" " to="" />
				</tokenfilter>
			</filterchain>
		</loadfile>
		<property name="full.version" value="${version}.${build}" />
		<echo message="The product version is: ${full.version}" />
		<antcall target="generate-build-site-num" />
		<loadfile srcfile="${build.num.site.file}" property="build.site">
			<filterchain>
				<tokenfilter>
					<filetokenizer />
					<replacestring from=" " to="" />
				</tokenfilter>
			</filterchain>
		</loadfile>
		<property name="full.site.version" value="${version.site}.${build.site}" />
		<echo message="The site version is: ${full.site.version}" />

		<mkdir dir="${jarexp.dir}" />
		<echo file="${jarexp.dir}/version" append="false">${full.version}</echo>
		<copy todir="${jarexp.dir}">
			<fileset dir="${basedir}/www/jarexp">
				<exclude name="**/*.zip" />
				<exclude name=".htaccess" />
				<exclude name="**/*.html" />
				<exclude name="**/*.htm" />
			</fileset>
		</copy>

		<!-- leave these properties for separate task running -->
		<property name="win.archive.name" value="JarExplorer.${full.version}.zip"/>
		<property name="lin.archive.name" value="JarExplorer.${full.version}.tar.gz"/>
		<property name="win.full.archive.name" value="JarExplorer.${full.version}.full.zip"/>
		<property name="lin.full.archive.name" value="JarExplorer.${full.version}.full.tar.gz"/>

		<copy todir="${jarexp.dir}" encoding="cp1251">
			<fileset dir="${basedir}/www/jarexp">
				<include name="**/*.html" />
				<include name="**/*.htm" />
			</fileset>
			<filterset>
				<filter token="COPYRIGHT" value="${copyright}" />
				<filter token="DOWNLOAD_WIN_ARCHIVE" value="${win.archive.name}" />
				<filter token="DOWNLOAD_WIN_FULL_ARCHIVE" value="${win.full.archive.name}" />
				<filter token="DOWNLOAD_LIN_ARCHIVE" value="${lin.archive.name}" />
				<filter token="DOWNLOAD_LIN_FULL_ARCHIVE" value="${lin.full.archive.name}" />
				<filter token="SITE_VER" value="${full.site.version}" />
			</filterset>
		</copy>
		<copy todir="${jarexp.dir}">
			<fileset dir="${basedir}/www/jarexp">
				<exclude name="**/*.zip" />
				<exclude name=".htaccess" />
			</fileset>
		</copy>
		<copy todir="${jarexp.dir}/downloads">
			<fileset dir="${artifacts.dir}">
				<include name="${win.archive.name}" />
				<include name="${win.full.archive.name}" />
				<include name="${lin.archive.name}" />
				<include name="${lin.full.archive.name}" />
			</fileset>
		</copy>
		<property name="libraries.dir" value="${jarexp.dir}/downloads/libraries"/>
		<mkdir dir="${libraries.dir}" />
		<copy todir="${libraries.dir}">
			<fileset dir="${basedir}/lib">
				<include name="${dependency1jarName}" />
				<include name="${dependency2jarName}" />
				<include name="${dependency3jarName}" />
				<include name="${dependency4jarName}" />
				<include name="${dependency5jarName}" />
			</fileset>
		</copy>
		<zip destfile="${artifacts.dir}/jarexp.zip" basedir="${jarexp.dir}" />
	</target>

</project>